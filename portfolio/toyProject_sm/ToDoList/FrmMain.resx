<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACpFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABdjSURBVHja7Z17sF11dcd/CXndhCRnn8fNm5DX2Xufe8MrQcoICq02DI9KoUJr+wet
        jiOgA0ErCgWVSqB1OnQqaYcZMgZaYEAqTBkB+6AokbZaQUEEqi0oMG0gQTDk3rvPvrm7a+39OyEMJORx
        9u+cfc7nM/OdcxnNPeeus9bav9daP2MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAADp3JoqmiaQjloKnWx6DDzBDNFx0vOl90mWiDaKNok+gWhHLQzdbHNlifO9/64Hzrk5Ajc0TvEa0X
        3SH6sWibaFSUINQBjVofVF+8XXSpTQizCdf2MEm0QvRJ0YOil0UTOB7qUk1YH31AdLH13UmE8cEFfii6
        RvSUaBznQgWT+uwzdrowRCLYfxaJrhT9FCdCPSL15Susb8Ne0BXW3xJtEe3CaVCPSX36u9bHpxLub6Um
        ula0HUdBPa5XRddZnwchEN3DUx/12WjgXuv7fc1xou/gEKhPtcVubfclJ4kewwlQn+uHopP7LfjXih7n
        y0dodxJY209z/i186Qi9Rd/thzWBml3w4wtH6O26W1Tu5X3+Daz2I7RXxaIviKb0YgL4kN0D5YtGaO/S
        4qIzey34F9s5Dl8wQu+ufxXN65Xg1yKIKxn6I3RAU4HP9koCaBgKexA6UD0r8nvh6X8tXyZCB9Vb4Kqi
        JwBtiPAMXyZCByXtNLS8yAlAu6LQzAOhg28qclFRg1/7oj3gcNHkRdEjorsMzStRPrrL+thL1udc+Pb9
        pqA9BrXK6eWcjdO0WyYX2sVGTzRgaF+N8tGA9bGGfTI/LIpy9vGtJms0WjjWm3wbeL5gstbMNFaATqG+
        d4noFzkvBl5SNMNoj/Q7cjTK06LfxP+gS1hnfTIvf79NNL1IBplvVzDzevKvw+egC5PACzn5/JM2pgo1
        /9+WgyF0vnUpvgZdPO1t5uD3r5iC9Qv4XZPPjT264FfFz6CL1wS+nYPfj4jOK5IhLjP5bPVdiI9Bl3Ox
        yWeLcH2RjLAhBwPo3msD/4IuZ8j6arv9f0NRDKDXJ2/MwQB6AMPDv6DL8ayvttv/bzQFuZpcO/9sysEA
        egprAP+CLmfA+mq7/f9mU5AbhfTE1OYcDHCL/d0A3e7/t+bg/5uL4v/TbLCSAKBfE0Bf+z8JAEgAJAAS
        AJAASAAkACABkABIAEACIAGQAIAEQAIgAQAJgARAAgASAAmABAAkABIACQBIACQAEgCQAEgAJAAgAZAA
        SABAAiABkACABEACIAEA/o8BAPB/DACA/2MAAPwfAwDg/xgA+oZkdmC+d2pg4nJgmvtQVAlFAf6PAaAn
        At+sNKPzGibyJLAlwGMvmCKBvlB0kujDoj8QfUiC/hj538vJ7OU2ETRMU5IB/o8BoKDEZd8kM5elT/Wx
        UmOaBPYpor8WPSV6VTQiGhO9IdoqekR0RdML6hOHH7k7EST4PwaAYjHu1c0ub1X61JdAXiL6S9EromQ/
        pAnio03PH2iWQxkJNPB/DABFYaRSN83S8vTJ3yz7gQTzg/sZ+HtKRwXXyb+f3VofwP8xAHT9nH+Nmajt
        XuxbKvrWQQR/S5Hoi81KOC1NAjKqwP8xAHQxzZo8/Su+Bn9FdNshBH9LvxSdrdOAZmkF/o8BoGuDP33q
        +7r4N1N+vkE03oYEoHoo9oKKjiqSeSvwfwwAXRn8nqjk6zbf50SjbQp+1U753edE8vsTv4z/YwDoquCv
        ypC/Ephds4Y1EVxgh+1Jm3Wj6LA2LwaSAEgAcGhP/tDEkgCiuQ0N/tNFL+QQ/KqH5b1K+n74PwaALiAq
        N0RD6bxfRgAnSJD+OKfgVz0rWsAIgAQAXUAiT/0dAyYL/nJQt6f4khz1nD1CjP9jAOg0Y6XQ6KKcJID5
        EpT35Bz8qidFgyQAEgB0fN7v21X/xhx5vUk04SAB3CfTjMNJACQA6Gjwa+D7eipvuvz8JXtaL3GgL47P
        GTJRxcf/MQB0gtjL9vqjuf5kCciLRDscBf/WuBycmCYfEgAJANyj9fyxzPvfWFDXUcC5tnw3caSbxyvh
        9Lj9jUJIACQAeNcnfzWrxov1jL8XvF9+/pnD4NfS4KN05PHK1EX4PwYAlyTV0CQLwuyYbzlYLfq+w+CX
        UUZ4zk75DLvK8jkGh/F/DADOgl+0M23l5beaejzgMPh/pesMUa0xOc5aieH/GABckpbg6lHfct2TYLzV
        YfA3Rdc0K8G0HJuB4P8YAPY672916vWCAXn9iih2FPwT6dmC9IxBmGfw4/8YAN7xyV/OOvqMV0Ktvvu0
        bd7p6ul/rz1daMa8AP/HAOA0+O1ef7JkjbEtu7c7DP4taV1BJcgcqTaE/2MAcIXu9Tf1jH+27bdO9HOn
        232eVhTqZ6inwv8xALgK/ko9HXLbc/5rbfGNq+B/UXsJRKUhe9bAx/8xALgiWbzYxOY3TOyli24rsuYb
        zoJfuwddsKu2Ku0q1HR3LRj+jwEgffrPHUrn/bHna7nt3Q6DX/sGXi7D/Sk5b/fh/xgA3nHRz674x9kF
        HBtFuxwFv3YMviH2gpn2lCH+jwHAafBX7Bl/L71442qHpb2q27O7A2TOX12F/2MAcP3kT/fa5weT5PXj
        otcdBv8/NcvhUr08dNe8I8RhTsH/MQC4Qlfaddgf1dIV/7NF/+sw+H8gI4+jdcHxjVpgRr0h/B8DgLPg
        9+pmvFLP9vzLwUm2266r4P8f0amxXhcuT/+xqo//YwBwRTI7MMnA8tYVXg15/Q+Hwa9Xg5//2vRFRhNA
        1JlFP/wfA/Rp8ItG54VpTz0J/kUSjN90GPx61fenotqqydrVRxMA/o8BwOWinwRdMw0+vyTB+DXHpb1f
        lsCf3oGDPvg/BoDWin9UCWbI6/WOS3s3xaVwbtbQM8D/MQC4DX7fHvZJS3svTW/adff0vy8qhwu1o9BY
        eSX+jwHAafCX/LSdVzLjGE0Cvyfa5jD4H5UnfqAJKKmdbJLSMfg/BgBXpH38SqtMs9rQfnofkIB83mHw
        PyOBf2JTtxq1tLjSwP8xALhidK5vRkr1rK2XFxwnAflDh8H/kuistK6/0vaLPPB/DAD7IjFDJlkamjg9
        5+8vk2B8yGHwvyb6WFIZntSh6j78HwP0+dC/ahf9vKAqr3c6DP4x0RVxNZzaKjLC/zEAuFz0a3XyLfmz
        5PWvHJb26vt8teml79uN2334Pwbo9eAPW9d3TZXXK+0T2dXT/864HNY08KPBsEhmIwGQAIpPXM4W/CZq
        x+vc+4/sXNxV8Osaw/LY881EZbl8+StJACQAEoDLJ78mgNHy0ToCONOuwrsK/h+JjtXkMzrYMGO1oaKZ
        jwRAAihw8Kd77KH28tPtvhMlGJ92GPzPS/L5YFSty3s39JhxEU1IAuglAyQzh00yXTRntUlKR6fqVfRk
        XXLErxk9bCNPYD89eecu+PVE4UeSyjH2IpGwqGYkARTZAM1qaJqDQ+lhkz0KXsxIbWXa57755v12Ztfc
        uhkv+b0R/KLR8ip7a2+4UP7Gf3AY/FpLsF5GHYe1bFtgSABFNEBi1pixwboEQLbyLQlgQJ6Cw/Yqqz8R
        bRB9SfQJcdCTRN7OwUY6VE5Kw2a8uE+sLPFpaa/O/UuBVtltslV3LoJfqwivj0r+jA528iUB9LMBonLD
        JIsXpXvNUdbN9jTRHfZ2megdWk9vtxddfCIu+1V9ao7P8SV4/IIGv+3km5X2Xmvr7V09/b8m71vKRlah
        6QFIAEUygF4Wmaw8w/axD+eJI/6F6NUDaEzxQLPsnzCyaLVMB1alq+dFIq400m46zdqqydphx3bacRX8
        35SgX6RTLF3xT3pjKYUEUCQD7Jwjc/t06BkutjfYHMzQ9yeiD4zOXZ0mgKLMYbWsVhPA6zPm6QjgfNtj
        z1Xw/7tIewiaZJaf9hY0JAASgEsDRNWwdYvNHHm95RAdWpPAyelc2vO7fi6raxbpVl9lSP/+X7fddV0F
        v3YNfq/2EhzPdhxMD0ECKFICSKYt1WC9uE032DwmT/81b16N1Z2OPVKp62Jfurshn/Xo9HO7C369L+Ds
        qJYWF6WXh/YYJIAiGKBZyW6OlSBY2uba9kdEYZQmgCETlbvrJJvudkzUsks85HMuzW7UcRb8elPQx8fm
        NCaljT28wPQgJIAiGCAuH5mu/kugfjSHhpbfEi1LW1cF55pkcLh75v21uj3j4FfsXXouS3uvjsv+tILU
        9ZMAejsBpEN0dcbNOTn83zfL4YJI5tk7ZkgiOPLILlj0C7KFv7I/U2/RtVuarkp7N8p7Hx73dvCTAAoz
        BcgcsZLjTTa6m3BLrO8hQ91oTme3uVon7Jolf4r8/DnRqMOn/91xJRjUff5o7pDpcUgABUoAeuT1v3O+
        r/7G2Fs1p5MHXZra0acSmPFZw/o3XyD6pcPg1wNTK/XJn5j3mmTxYhIACaBrEsAiB51t9bDQdU0vHOjE
        3Dc93isJQEcg8t6n29ONroL/CdEa7SU4qteGV33TB5AACpMAvKAmr487CIQR0eejbM3BWRLIFjmHsos8
        KsEJ8r5POQz+X4h916WjD91y9ALTJ5AAijMC8PWp/HVHAfEr0SfHK43DWotxeZJI4O0Y2H2LT91uT7oK
        /u2RFlEtWWNLe/sm+EkAxdkFWGWfjsFlDivftIjoghFv+aQ467Kb25cwVgrtEWd/vrznPQ6DX0c7n4mq
        4ZRm76/4kwCKOwLYXds/JHrO8Um439m2ZKUZL+WTBFp39zW9hi4+3uS4tPcrdmRVpE6+JIB+NEC6PTe3
        rlVwf+owSGzrq+C0US87kRe18SmZBb+28/Kn2/4FkcO/62/l7yln14Y3TJ9CAiiKAXSRLO3446W7Af/s
        MFCStNeeF7wv1r3xcnuKh/RcvQb/WGWZJrULRTsc/j0Pio7QQqiRkt8rpb0kgF42QNYGa/e5+DWOdgTe
        WjxUTu/ZO+TioUir6mTev3P+Sv1bzhVtdfh3fF80rCOZZP5RXXX0Gf/HAO8yCtC5cj0dsooTv9+WqrpM
        Aro630g/x0EWD8XVVkeftJPv++Tnnzr8/D9Tu8W7LxEJTZ9DAiiaAbJ5syaAZXpwRg/L/NxxEvjH9CIM
        LR4aPu+AnqCJljQvyCrr5Hestk9jV59bRxnn7lxQT6cfUTkwQAIopAGa6aGZ0Oyae4QG0nmi/3OcBL4h
        QbxQt+7emBHsV/GQGmWnN5yNYsrBkqw9mbPPq+caLmrWhiY3c97SJAGQAJwYIC1WEUfecfiy1nVYrzoM
        KN2FuFWG0pWm7uHPGXrXhbRs2qIddUJP/63Dz6o7C9c0K8G0Pt3rJwH0qgG0fDdToAdZLnW8kq7FQxvj
        UjAn9vZdPBS/eT/BQLb33vaeBvtKVDdlZwxCgp8E0HsG2H0hSDndS7/KcemsFg/9mSSAmXt7urZ2DcYr
        gR4r/rQ9fefq893b9Pz5uuYwxrCfBNCrBtidBLJA/HPHvfI1oK+I3qF7TutsfbLkOGMvLdnu8HNtsXUF
        2ZdSGyLcSQC9a4DIzrGbXqi35fyN7WzjcpHtU+PlYEqrl4Du9afrA9m23zrHuxVPSeI5IbVHqZ4KSAA9
        bQB907GSb9t8h1UJgr9zvDOgi5B/ODL3qElxuWFGPb91zn+t6EmHn0N7CJwelYbsWQOfMCcB9IcBkoVr
        TDJzZbrNFXn+IseVda3ioQ9vnVEx9rDNCttlx9X7a/egC3ZVV2ZXiFWY95MA+swAO6u+2V5d0VoXWO64
        lXareGhd7PmD9vYiV++ri5+XyxN/Ctt9JIC+NkBki1zs9pveGvxvzouHsiu7Y4dbkjfsazcCSAB9ZYCx
        dBoQpslAAuL4Nl8o0m26PeuaLH9rdRVhjf9jACU7/OK3Sok7UTzkQjLFCZemtQm1JWL8Uwhr/B8DvJkE
        Ol48lKd+0KwER2txz47BwIyUhwlp/B8DvD0JZMVD496yThUP5SG9IfhULekd08YiVbb78H8MsM/pgCaB
        HdVGJ4qH2q1XNJG9Pl1r+gNKe/F/DLBfuwO2p1+HiofapTf01GFUq0/W4I/Z68f/McCBjAQ6WjzUjuKj
        L0vQT+egD/6PAQ41CXSmeOhQSns3xaW01oHgx/8xwCFNB3YXDwWdKB46GN0XlcOF2pV4rLyS0MX/McCh
        0AXFQweiR+WJH6SlvbWTTVI6htDF/zHAISeBVvGQ7hBUgk4UD+2PnhGdmPYWqPb1JR74PwZoP1o8tM07
        spPFQ/vSS6Kz0oNMLPrh/xggp/WAPYqHouz+wUe7IPhfE30sqR01iQIf/B8D5ExaPJTtDHRD8dCYthmL
        q+HU9MlP8OP/GCB/smDz0xODHSwe0t2IrzY9fxbbffg/BnCdBNLiIU0AKzpVPHRnXA5rGvjRYEiI4v8Y
        wH0SCG3x0JGui4f+Jb12zPPNRGW5GJL9fvwfA3Q0CTgsHvqR6FhdiBwdbJgx2njj/xigszgsHnpeEs4H
        o2rdNL2GnkkgNPF/DNAdI4Hci4e2iT6SVI6xF4kw78f/MUB3JoH2Fw/tFK2XOf9h9u5AQhL/xwBdOR1o
        f/GQdgy+PioFM5oee/34PwboavYsHooPvXgoK+2tBKVsy5FhP/6PAbo/CSxcYyZm1bPioXKwQIL41oPo
        /d9Mg78cDupev674JwQi/o8BisFIpW6SWWdkV39VfE+P7B7AYaHnRJ+VOf9cDf7XjhgyyWyG/vg/BihW
        EiivNElldXpqMJm9YrLM4Y+TwL5O9J+2YedOe55/p/3v74mulaH+0btqw5N0zj9SC+Xfcmsv/o8BCoue
        2Iu9ejqHnygv1wNDNVtIdI7o90W/HZX9tTJdqCW14ybp/y+muAf/xwC9tTgYzTvWxNlV4HtVOmWoDjPf
        x/8xAAD+jwEA8H8MAID/YwAA/B8DAOD/GAAA/8cAAPg/BgDA/zEAAP6PAQDwfwwAgP9jAAD8HwMA4P8Y
        AAD/xwAA+D8GAMD/MQAA/o8BAPB/DACA/+9pgM0kAOjjBHBrDv6/uSj+P1W0KQcD3CUawL+gy1Ef/XoO
        /n+zja2uZ7JoYw4GeETk4V/Q5aiPbsnB/2+0sVUINuRggJdEQ/gXdDlD1lfb7f/XFskIl+VggFh0Ef4F
        Xc7FovEc/H99kYxwvmg0ByM8LKrhY9ClqG9+Owe/HxGdVyRDHC/aloMhoqJlQugrdOTbzMHvXxGtLZIh
        5ouezMEQqhdEp+Fr0GWoT76Yk88/YWOqMMwQ3Z6TMVRPkwSgy4L/6Rz9/TbR9KIZ5VLRRI5G0ZHAZ0SD
        +B90cM6/Pscnf2Jj6JIiGuc9opdzNExi51u66KK7A7r9onuwehBjGkI5aMD6mPraxdb3opx9fGvR5v8t
        ZoseyNk4e24R6t6rHhbSE4O3IJSD9ITfFutrsSPfvt/GUiHJa08UoX7QuCn42ZcVOS+OINTL+oloeZET
        wCTRl/kiETooXWNjqNA0RP/Fl4nQAelZUdAr2yWfF+3iS0Vovxe1/7iX9ksXmXxKJBHqRT0kmtdrhybO
        Em3ny0Von9IamjN68dSUdjO5lm1BhPY59L9aNMX0KHp08ht80Qi9o/SgUdn0OL7oO3zZCL2t5Z1v+oQ1
        osf50hFK9biNib7iJNFjfPmI4E9joS85jukA6mPp1vha0+f4dvGjiUOgPlrtv7uf5vzvhtZYX2Xy6SOI
        UDdJ+/t9QVQh7N/KFHsA4iHjrtYaIZelvTrdPbOX9/nbgbb40lZfz5h8W4oh5EpaDHe5aAHhvf/URVeY
        rLswpwdREZ/4+hDTW7K40eoQWGayrijaGmkrowLUxZqwPnq/9VltiDOJEG4P2hdNLxzRDqm32ZGBLqiM
        4HioQxqxPviE9clL7LbebMI1X7RH+nxrbL0yab0daukNqnqN8mZDA0vUXm22vnWj9bX11vfWWl+cTlh2
        Hr0+WasOaWGN8tBUU6ArugEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKB7+X/J
        aP8cC7q8/gAAAABJRU5ErkJggg==
</value>
  </data>
</root>